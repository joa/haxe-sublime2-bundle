<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>hx</string>
    <string>hxsl</string>
    <string>hscript</string>
  </array>
  <key>foldingStartMarker</key>
  <string>(\{\s*(//.*)?$|^\s*// \{\{\{|#if)</string>
  <key>foldingStopMarker</key>
  <string>^\s*(\}|// \}\}\}$|#end)</string>
  <key>keyEquivalent</key>
  <string>^~H</string>
  <key>name</key>
  <string>Haxe</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>include</key>
      <string>#comments</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#regex</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#strings</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#constants</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#class-definition</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#function-definition</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#storage</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#constructor</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#keywords</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#field-completions</string>
    </dict>
  </array>
  <key>repository</key>
  <dict>
    <key>class-definition</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.type.class.haxe.2</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.class.haxe.2</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>entity.name.type.class.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(?x)
                                (\b(class|enum|interface|abstract)|\b(implements|extends))
                                \s+(([a-z]+.)*[A-Z]\w*)</string>
        </dict>
      </array>
    </dict>
    <key>comments</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>/\*\*/</string>
          <key>name</key>
          <string>comment.block.empty.haxe.2</string>
        </dict>
        <!--<dict>
          <key>include</key>
          <string>text.html.javadoc</string>
        </dict>-->
        <dict>
          <key>include</key>
          <string>#comments-inline</string>
        </dict>
      </array>
    </dict>
    <key>comments-inline</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>begin</key>
          <string>/\*</string>
          <key>captures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.haxe.2</string>
            </dict>
          </dict>
          <key>end</key>
          <string>\*/</string>
          <key>name</key>
          <string>comment.block.haxe.2</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>comment.line.double-slash.haxe.2</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>\s*((//).*$\n?)</string>
        </dict>
      </array>
    </dict>
    <key>constants</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>\b(true|false|null)\b</string>
          <key>name</key>
          <string>constant.language.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
          <key>name</key>
          <string>constant.numeric.haxe.2</string>
        </dict>
      </array>
    </dict>
    <key>constructor</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.haxe.2</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.type.class.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>\b(new)\s+(([a-z]+\.)*[A-Z]\w+(&lt;[\w\.,\s&lt;&gt;]+&gt;)?)</string>
        </dict>
      </array>
    </dict>
    <key>field-completions</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>begin</key>
          <string>\.|(?&lt;!if|while|return|for)\s*\(\b</string>
          <key>end</key>
          <string>\s|\n|;</string>
          <key>name</key>
          <string>meta.scope.field-completions.haxe.2</string>
          <key>patterns</key>
          <array>
            <dict>
              <key>include</key>
              <string>#constants</string>
            </dict>
            <dict>
              <key>include</key>
              <string>#strings</string>
            </dict>
            <dict>
              <key>include</key>
              <string>#constructor</string>
            </dict>
            <dict>
              <key>include</key>
              <string>#keywords</string>
            </dict>
          </array>
        </dict>
      </array>
    </dict>
    <key>function-definition</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.other.haxe.2</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>entity.name.function.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>\b(function)\s+([_A-Za-z]\w+)\s*</string>
        </dict>
      </array>
    </dict>
    <key>keywords</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>\b(try|catch|throw)\b</string>
          <key>name</key>
          <string>keyword.control.catch-exception.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\w+\s*\?\s*\w+\s*:</string>
          <key>name</key>
          <string>keyword.control.ternary-if.haxe.2</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.control.haxe.flow-control.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>\b(if|return|while|for)\b\s*\(</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(return|break|case|continue|default|do|while|for|switch|if|else)\b</string>
          <key>name</key>
          <string>keyword.control.haxe.flow-control.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
          <key>name</key>
          <string>keyword.operator.comparison.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(=)</string>
          <key>name</key>
          <string>keyword.operator.assignment.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\.\.\.)</string>
          <key>name</key>
          <string>keyword.control.directive.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\-\-|\+\+)</string>
          <key>name</key>
          <string>keyword.operator.increment-decrement.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\-|\+|\*|\/|%)</string>
          <key>name</key>
          <string>keyword.operator.arithmetic.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(!|&amp;&amp;|\|\|)</string>
          <key>name</key>
          <string>keyword.operator.logical.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(cast|untyped)\b</string>
          <key>name</key>
          <string>keyword.other.untyped.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\btrace\b</string>
          <key>name</key>
          <string>keyword.other.trace.haxe.2</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.control.directive.conditional.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(#(if|elseif)\s+([\!\w-]+|(\([^\)]*\)))\s*)</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(#\w+\s*)</string>
          <key>name</key>
          <string>keyword.control.directive.conditional.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>;</string>
          <key>name</key>
          <string>punctuation.terminator.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(this|super)\b</string>
          <key>name</key>
          <string>variable.language.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(var|new)\b</string>
          <key>name</key>
          <string>keyword.other.variable.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b__(init|instanceof|string_rec)\b</string>
          <key>name</key>
          <string>support.variable.magic.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\bprototype\b</string>
          <key>name</key>
          <string>support.variable.magic.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b__(init|name|ename|super|unprotect|constructs|class|enum)__\b</string>
          <key>name</key>
          <string>support.variable.magic.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b_\b</string>
          <key>name</key>
          <string>support.variable.magic.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(Array|ArrayAccess|Bool|Class|Date|DateTools|Dynamic|EReg|Enum|Float|Hash|Int|IntHash|IntIter|Iterable|Iterator|Lambda|List|Math|Null|Reflect|Std|String|StringBuf|StringTools|Type|UInt|ValueType|Void|Xml|XmlType|TBool|TInt|TFloat|TFunction|TObject|TEnum|TClass|TNull|TUnknown|Float2|Float3|Float4|Matrix|M44|M33|M43|M34|Texture|CubeTexture|Color|Map)\b</string>
          <key>name</key>
          <string>support.class.haxe</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\$)([iea])\(</string>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>support.reification.haxe.2</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.reification.haxe.2</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>match</key>
          <string>((\$)([a-zA-Z.]*))</string>
          <key>captures</key>
          <dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.reification.haxe.2</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>entity.name.type.package.haxe.2</string>
            </dict>
            <key>4</key>
            <dict>
              <key>name</key>
              <string>entity.name.type.class.haxe.2</string>
            </dict>
          </dict>
          <key>match</key>
          <string>(\b(([a-z][a-zA-Z0-9]*\.)*)([A-Z]\w*|\*))</string>
        </dict>
        <dict>
          <key>name</key>
          <string>keyword.other.haxe.2</string>
          <key>match</key>
          <string>\b(function)\b</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#storage</string>
        </dict>
      </array>
    </dict>
    <key>regex</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>name</key>
          <string>string.regexp.haxe.2</string>
          <key>match</key>
          <string>~/((?:\\/|[^/])+)/</string>
        </dict>
      </array>
    </dict>
    <key>storage</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>((@:)(require|final|hack|native|coreApi|fakeEnum|macro|build|keep|keepSub|overload|extern|optional|feature|noCompletion|noUsing|allow|access|generic|publicFields|expose|defineFeature|runtime|initPackage|bind|bitmap|file|font|sound|ns|protected|getter|setter|meta|debug|noDebug|headerCode|headerClassCode|cppFileCode|functionCode|functionTailCode|buildXml|cppNamespaceCode|headerNamespaceCode|noStack|depend|include|internal|volatile|transient|functionBody|classContents|remove)\b)</string>
          <key>captures</key>
          <dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.macro.haxe.2</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>storage.modifier.macro.haxe.2</string>
            </dict>
          </dict>

        </dict>
        <dict>
          <key>match</key>
          <string>((@:?)([a-zA-Z_]*))</string>
          <key>captures</key>
          <dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>support.macro.haxe.2</string>
            </dict>
            <key>3</key>
            <dict>
              <key>name</key>
              <string>support.macro.haxe.2</string>
            </dict>
          </dict>

        </dict>
        <dict>
          <key>match</key>
          <string>\b(public|private|static|dynamic|inline|macro|extern|typedef|override)\b</string>
          <key>name</key>
          <string>storage.modifier.haxe.2</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(package)(\s+[a-z\._]*);</string>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>storage.type.package.haxe.2</string>
            </dict>
            <key>2</key>
            <dict>
              <key>name</key>
              <string>entity.name.type.package.haxe.2</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(import|using)\b</string>
          <key>name</key>
          <string>storage.type.import.haxe.2</string>
        </dict>
      </array>
    </dict>
    <key>strings</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>begin</key>
          <string>"</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.begin.haxe.2</string>
            </dict>
          </dict>
          <key>end</key>
          <string>"</string>
          <key>endCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.haxe.2</string>
            </dict>
          </dict>
          <key>name</key>
          <string>string.quoted.double.haxe.2</string>
          <key>patterns</key>
          <array>
            <dict>
              <key>match</key>
              <string>\\.</string>
              <key>name</key>
              <string>constant.character.escape.haxe.2</string>
            </dict>
          </array>
        </dict>
        <dict>
          <key>begin</key>
          <string>'</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.begin.haxe.2</string>
            </dict>
          </dict>
          <key>end</key>
          <string>'</string>
          <key>endCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.haxe.2</string>
            </dict>
          </dict>
          <key>name</key>
          <string>string.quoted.single.haxe.2</string>
          <key>patterns</key>
          <array>
            <dict>
              <key>match</key>
              <string>\\.</string>
              <key>name</key>
              <string>constant.character.escape.haxe.2</string>
            </dict>
            <dict>
              <key>match</key>
              <string>\$\$</string>
              <key>name</key>
              <string>constant.character.escape.haxe.2</string>
            </dict>
            <dict>
              <key>captures</key>
              <dict>
                <key>1</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.haxe.2</string>
                </dict>
                <key>2</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.haxe.2</string>
                </dict>
                <key>3</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.haxe.2</string>
                </dict>
                <key>4</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.haxe.2</string>
                </dict>
              </dict>
              <key>comment</key>
              <string>String interpolation : "${test.ole}"</string>
              <key>match</key>
              <string>(\$)(\{)([^}]*)(\})</string>
            </dict>
            <dict>
              <key>captures</key>
              <dict>
                <key>1</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.haxe.2</string>
                </dict>
                <key>2</key>
                <dict>
                  <key>name</key>
                  <string>variable.other.haxe.2</string>
                </dict>
              </dict>
              <key>comment</key>
              <string>String interpolation : "$test"</string>
              <key>match</key>
              <string>(\$)([\w]*)</string>
            </dict>

          </array>
        </dict>
      </array>
    </dict>
  </dict>
  <key>scopeName</key>
  <string>source.haxe.2</string>
  <key>uuid</key>
  <string>6ED422A4-9B8C-451E-A585-6869F16122A2</string>
</dict>
</plist>
